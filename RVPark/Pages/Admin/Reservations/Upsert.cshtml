@page
@model RVPark.Pages.Admin.Reservations.UpsertModel
@using Microsoft.AspNetCore.Mvc.Rendering

<form method="post" enctype="multipart/form-data">
    <div class="container mt-4 d-flex justify-content-center">
        <div class="card shadow-sm w-100" style="max-width: 700px;">
            <div class="card-body px-5 py-4">
                <h2 class="text-primary text-center mb-4">
                    @(Model.Reservation.ReservationId != 0 ? "Edit Reservation" : "Create Reservation")
                </h2>

                <input type="hidden" asp-for="ReturnUrl" />
                <div asp-validation-summary="ModelOnly" class="text-danger small mb-3"></div>

                <div class="mb-3">
                    <label for="guestDropdown" class="form-label fw-bold">Select Guest</label>
                    <div class="input-group">
                        <select id="guestDropdown" name="SelectedGuestId" class="form-select select2" onchange="fetchGuestRV()">
                            <option disabled selected value="">-- Search or select guest --</option>
                            @foreach (var guest in Model.GuestOptions)
                            {
                                <option value="@guest.Value" selected="@(Model.SelectedGuestId?.ToString() == guest.Value)">
                                    @guest.Text
                                </option>
                            }
                        </select>
                        <a href="/Admin/Guests/Upsert?returnUrl=/Admin/Reservations/Upsert"
                           id="newGuestBtn"
                           class="btn btn-outline-primary" target="_blank">
                            <i class="fas fa-user-plus"></i> New Guest
                        </a>
                    </div>
                </div>

                <div class="mb-3">
                    <label class="form-label fw-bold">RV Length</label>
                    <div class="input-group">
                        <input type="number" id="Rv_Length" name="Length" class="form-control text-center" value="@Model.Length" />
                        <a id="rvEditLink"
                           asp-page="/Admin/RVs/Edit"
                           asp-route-id="@Model.Reservation.RvId"
                           asp-route-returnUrl="/Admin/Reservations/Upsert"
                           class="btn btn-custom-blue @(Model.Reservation.RvId == 0 ? "disabled" : "")">
                            <i class="fas fa-edit"></i> Edit
                        </a>

                    </div>
                </div>


                <div class="row mb-3">
                    <div class="col">
                        <label asp-for="Reservation.NumberOfAdults" class="form-label fw-bold">Adults</label>
                        <input asp-for="Reservation.NumberOfAdults" class="form-control text-center" />
                    </div>
                    <div class="col">
                        <label asp-for="Reservation.NumberOfPets" class="form-label fw-bold">Pets</label>
                        <input asp-for="Reservation.NumberOfPets" class="form-control text-center" />
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-md-6">
                        <label asp-for="Reservation.StartDate" class="form-label fw-bold">Start Date</label>
                        <input asp-for="Reservation.StartDate" type="date" class="form-control" onchange="calculateDuration()" />
                    </div>
                    <div class="col-md-6">
                        <label asp-for="Reservation.EndDate" class="form-label fw-bold">End Date</label>
                        <input asp-for="Reservation.EndDate" type="date" class="form-control" onchange="calculateDuration()" />
                    </div>
                </div>

                <div class="mb-3">
                    <label asp-for="Reservation.Duration" class="form-label fw-bold">Duration (Days)</label>
                    <input asp-for="Reservation.Duration" class="form-control text-center" readonly />
                </div>

                <div class="mb-3">
                    <label class="form-label fw-bold">Lot Type</label>
                    <select asp-for="Reservation.LotTypeId" id="Reservation_LotTypeId" class="form-control text-center">
                        <option disabled selected value="">-- Select Lot Type --</option>
                        @foreach (var lotType in Model.LotTypeOptions)
                        {
                            <option value="@lotType.Id" data-rate="@lotType.Rate">@lotType.Name - $@lotType.Rate/day</option>
                        }
                    </select>
                </div>

                <div class="mb-3">
                    <label asp-for="Reservation.LotId" class="form-label fw-bold">Lot</label>
                    <select asp-for="Reservation.LotId" id="Reservation_LotId" class="form-control text-center" disabled>
                        <option disabled selected value="">-- Select Lot --</option>
                    </select>
                </div>

                <div class="mb-3">
                    <label class="form-label fw-bold">Estimated Base Total</label>
                    <input id="updatedTotalField" class="form-control text-center fw-bold" readonly />
                </div>

                <input type="hidden" asp-for="Reservation.GuestId" />
                <input type="hidden" asp-for="Reservation.RvId" />

                <div class="d-flex justify-content-between mt-4">
                    <a asp-page="Index" class="btn btn-custom-grey">
                        <i class="fas fa-arrow-left me-1"></i> Cancel
                    </a>
                    <button type="submit" class="btn btn-custom-blue">
                        <i class="fas fa-save me-1"></i> Save Reservation
                    </button>
                </div>
            </div>
        </div>
    </div>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>

    <script>
        $(document).ready(function () {
            $('.select2').select2();

            $('#Reservation_LotTypeId').one('click', () => $('#Reservation_LotId').prop('disabled', false));
            $('#Reservation_LotTypeId').on('change', fetchAvailableLots);
        });

        function calculateDuration() {
            const start = new Date($('#Reservation_StartDate').val());
            const end = new Date($('#Reservation_EndDate').val());
            const duration = Math.ceil((end - start) / (1000 * 60 * 60 * 24));
            $('#Reservation_Duration').val(duration > 0 ? duration : 0);
            updateTotal();
        }

        function updateTotal() {
            const duration = parseInt($('#Reservation_Duration').val()) || 0;
            const rate = parseFloat($('#Reservation_LotTypeId option:selected').data('rate')) || 0;
            $('#updatedTotalField').val((duration * rate).toFixed(2));
        }

        function fetchAvailableLots() {
            const lotTypeId = $('#Reservation_LotTypeId').val();
            const trailerLength = $('#Rv_Length').val();
            const startDate = $('#Reservation_StartDate').val();
            const endDate = $('#Reservation_EndDate').val();

            if (!lotTypeId || !startDate || !endDate || !trailerLength) return;

            $.get('/Admin/Reservations/Upsert?handler=AvailableLots', {
                lotTypeId,
                trailerLength,
                startDate,
                endDate
            }, function (response) {
                const $lotSelect = $('#Reservation_LotId');
                $lotSelect.empty().prop('disabled', false);

                if (response.length === 0) {
                    $lotSelect.append('<option disabled selected>No lots available</option>');
                } else {
                    $lotSelect.append('<option disabled selected>-- Select Lot --</option>');
                    response.forEach(lot => {
                        $lotSelect.append(`<option value="${lot.id}" data-rate="${lot.lotTypeRate}">Lot #${lot.id} - ${lot.location}</option>`);
                    });
                }

                updateTotal();
            });
        }

        function fetchGuestRV() {
            const guestId = $('#guestDropdown').val();
            if (!guestId) return;

            fetch(`/api/guests/${guestId}/rv`)
                .then(res => res.json())
                .then(data => {
                    $('#Rv_Length').val(data.length || '');
                    $('#rvEditLink').attr('href', `/Admin/RVs/Edit/${data.rvId}?returnUrl=/Admin/Reservations/Upsert`);
                    $('[name="Reservation.RvId"]').val(data.rvId);
                    $('[name="Reservation.GuestId"]').val(guestId);
                })
                .catch(err => {
                    console.error("Failed to fetch RV:", err);
                    $('#Rv_Length').val('');
                    $('#rvEditLink').attr('href', '#');
                });
        }

        if (window.opener && window.location.href.includes("guestId")) {
            window.opener.location.href = window.location.href;
            window.close();
        }
                function loadManualFees() {
            fetch('/api/fees/manual')
                .then(response => response.json())
                .then(data => {
                    const tbody = document.getElementById('manualFeeTableBody');
                    tbody.innerHTML = '';

                    data.forEach(fee => {
                        const row = document.createElement('tr');
                        row.innerHTML = `
                            <td>${fee.feeTypeName}</td>
                            <td>$${parseFloat(fee.feeTotal).toFixed(2)}</td>
                            <td>
                                <input type="checkbox" name="SelectedManualFees" value="${fee.id}" data-amount="${fee.feeTotal}" />
                            </td>
                        `;
                        tbody.appendChild(row);
                    });
                })
                .catch(err => {
                    console.error("Failed to load manual fees:", err);
                });
        }

        document.getElementById('toggleManualFees')?.addEventListener('change', function () {
            const container = document.getElementById('manualFeeTableContainer');
            if (this.checked) {
                loadManualFees();
                container.style.display = 'block';
            } else {
                container.style.display = 'none';
            }
        });
    </script>
}
