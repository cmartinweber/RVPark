@page
@model RVPark.Pages.Customer.Home.IndexModel
@{
    ViewData["Title"] = "Campsites";
}

<div class="container py-5">
    <div class="card shadow-lg border-0 rounded-4">
        <div class="card-header bg-white text-center py-4 border-bottom border-2">
            <h2 class="text-custom-blue-header mb-0"><strong>Explore Our RV Campsites</strong></h2>
        </div>

        <div class="card-body px-4 pt-4 pb-5">
            <form method="get" class="row g-3 mb-4" id="filterForm">
                <div class="col-md-3">
                    <label for="StartDate" class="form-label">Start Date</label>
                    <input type="date" id="StartDate" name="StartDate" class="form-control" value="@Model.FilterStartDate?.ToString("yyyy-MM-dd")" />
                </div>
                <div class="col-md-3">
                    <label for="EndDate" class="form-label">End Date</label>
                    <input type="date" id="EndDate" name="EndDate" class="form-control" value="@Model.FilterEndDate?.ToString("yyyy-MM-dd")" />
                </div>
                <div class="col-md-3">
                    <label for="LotTypeId" class="form-label">Lot Type</label>
                    <select id="LotTypeId" name="LotTypeId" class="form-select">
                        <option value="">All Lot Types</option>
                        @foreach (var lt in Model.AllLotTypes)
                        {
                            <option value="@lt.Id" selected="@(Model.SelectedLotTypeId == lt.Id)">
                                @lt.Name
                            </option>
                        }
                    </select>
                </div>
                <div class="col-md-3 d-flex align-items-end">
                    <button type="submit" class="btn btn-custom-blue w-100">Apply Filters</button>
                </div>
            </form>

            @* Featured Lot *@
            @if (Model.FeaturedLot != null)
            {
                var featuredImage = Model.FeaturedLot.FeaturedImage ?? Model.FeaturedLot.ImageList?.Split(',').FirstOrDefault();
                var featuredPath = !string.IsNullOrWhiteSpace(featuredImage) ? featuredImage : "/images/default.jpg";

                <div class="card mb-5 border-0 shadow-lg p-4 bg-light rounded-4">
                    <div class="row g-4 align-items-center">
                        <div class="col-md-6 text-center">
                            <img src="@featuredPath" class="img-fluid rounded-4 shadow" style="max-height: 400px;" alt="Featured Lot">
                        </div>
                        <div class="col-md-6">
                            <h3 class="text-custom-blue-header"><strong>@Model.FeaturedLot.LotType?.Name</strong></h3>
                            <p class="text-muted">@Model.FeaturedLot.Description</p>
                            <div class="mb-3">
                                <span class="badge bg-custom-blue px-3 py-2">@Model.FeaturedLot.Location</span>
                                <span class="text-danger fs-5 fw-bold">@Model.FeaturedLot.LotType?.Rate.ToString("C")/night</span>
                            </div>
                            <a asp-page="Details" asp-route-id="@Model.FeaturedLot.Id" class="btn btn-custom-blue">View Details</a>
                        </div>
                    </div>
                </div>
            }

            <div class="d-flex justify-content-end mb-4">
                <select id="sortOptions" class="form-select w-auto border-custom-blue text-custom-blue">
                    <option value="az">Sort: A - Z</option>
                    <option value="za">Sort: Z - A</option>
                    <option value="high">Sort: Most Expensive</option>
                    <option value="low">Sort: Least Expensive</option>
                </select>
            </div>

            <div id="lotContainer" class="row g-4">
                @foreach (var lot in Model.AvailableLots)
                {
                    var lotRate = lot.LotType?.Rate ?? 0;
                    var img = lot.ImageList?.Split(',').FirstOrDefault()?.Trim() ?? "/images/default.jpg";

                    <div class="col-lg-4 col-md-6 lot-card" data-name="@lot.Location" data-price="@lotRate">
                        <div class="card h-100 border-0 shadow-sm rounded-3">
                            <img src="@img" class="card-img-top rounded-top" alt="@lot.Location" />
                            <div class="card-body d-flex flex-column">
                                <h4 class="card-title text-custom-blue mb-2"><strong>@lot.LotType?.Name</strong></h4>
                                <div class="d-flex justify-content-between mb-3">
                                    <span class="badge bg-custom-blue">@lot.Location</span>
                                    <span class="text-danger fs-5 fw-bold">@lotRate.ToString("C")/night</span>
                                </div>
                                <p class="text-muted mb-4">@lot.Description</p>
                                <a asp-page="Details" asp-route-id="@lot.Id" class="btn btn-outline-custom-blue mt-auto w-100">View Details</a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.getElementById("sortOptions").addEventListener("change", function () {
            const sort = this.value;
            const container = document.getElementById("lotContainer");
            const cards = Array.from(container.getElementsByClassName("lot-card"));

            cards.sort((a, b) => {
                const nameA = a.dataset.name.toLowerCase();
                const nameB = b.dataset.name.toLowerCase();
                const priceA = parseFloat(a.dataset.price);
                const priceB = parseFloat(b.dataset.price);

                switch (sort) {
                    case "az": return nameA.localeCompare(nameB);
                    case "za": return nameB.localeCompare(nameA);
                    case "high": return priceB - priceA;
                    case "low": return priceA - priceB;
                    default: return 0;
                }
            });

            cards.forEach(card => container.appendChild(card));
        });
    </script>
    <script src="~/js/home.js"></script>
}
